# perfil para homologação
#para criar o script para o DB automanticamente,
# descomentar as 4 linhas abaixo, executar a primeira vez e depois comentar
#vai ser criado um arquivo sql na raíz da aplicação

#spring.jpa.properties.jakarta.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.jakarta.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;

# Configurações básicas para conexão com o banco Oracle
spring.datasource.url=jdbc:oracle:thin:@oracle.fiap.com.br:1521:ORCL
spring.datasource.username=rm93360
spring.datasource.password= 100903
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# Dialeto utilizado para trabalhar no banco, cada banco possui um dialeto
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.OracleDialect

# Informa ação DDL inicial do Hibernate - create, update, create-drop, validate, none
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=none
# depois mudar para none

# Exibe / oculta o SQL executado
spring.jpa.show-sql=true

# Formata o sql exibido
spring.jpa.properties.hibernate.format_sql=true

# Seed do banco de dados
# Executa um SQL após inicialização do hibernate, funciona apenas com create
# spring.jpa.hibernate.ddl-auto=create
# Utilizamos o arquivo import.sql

# Se desejar criar um arquivo seed com nome diferente do import.sql
# utilize a propriedade abaixo
#spring.jpa.properties.hibernate.hbm2dl.import_files=populate-database.sql






